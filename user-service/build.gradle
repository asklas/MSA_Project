plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.example.msaProject'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	// Spring Data JPA: 데이터베이스와의 상호작용을 위한 JPA 기능 제공
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Spring Security: 인증 및 권한 부여를 위한 보안 기능 제공
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Spring Web: RESTful API 및 웹 애플리케이션을 위한 웹 기능 제공
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Spring DevTools: 개발 중에 핫스왑, 자동 재시작 등 편리한 개발 도구 제공
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// H2 Database: 테스트 및 개발을 위한 인메모리 데이터베이스
	runtimeOnly 'com.h2database:h2'

	// Spring Boot Test: 테스트 기능을 위한 스타터
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Spring Security Test: Spring Security 관련 테스트를 위한 기능 제공
	testImplementation 'org.springframework.security:spring-security-test'

	// JUnit Platform Launcher: JUnit 테스트 실행을 위한 런처
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Spring Kafka: Kafka 메시징을 위한 Spring 지원
	implementation 'org.springframework.kafka:spring-kafka'

	// MySQL Connector: MySQL 데이터베이스와 연결하기 위한 JDBC 드라이버
	implementation 'mysql:mysql-connector-java:8.0.33'

	// QueryDSL: 타입 안전한 쿼리 생성을 위한 라이브러리 (JPA용)
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'

	// Lombok: 보일러플레이트 코드를 줄여주는 어노테이션 기반 라이브러리
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3', 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//config client
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	// Spring Cloud Starter for Eureka Client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// Jackson 의존성
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.core:jackson-annotations'
	implementation 'com.fasterxml.jackson.core:jackson-core'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
